Traceback (most recent call last):
  File "/home/runner/.local/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/.local/lib/python3.12/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/runner/.local/lib/python3.12/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/runner/.local/lib/python3.12/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/.local/lib/python3.12/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
mean_composition_years = (
    hascadence_metadata.groupby(level=0).composed_end.mean().astype(int).sort_values()
)
chronological_corpus_names = hascadence_metadata.get_corpus_names()
bar_data = pd.concat(
    [
        mean_composition_years.rename("year"),
        hascadence_metadata.groupby(level="corpus").size().rename("pieces"),
    ],
    axis=1,
).reset_index()
fig = px.bar(
    bar_data,
    x="year",
    y="pieces",
    color="corpus",
    title="Pieces contained in the dataset",
)
fig.update_traces(width=5)
------------------


[31m---------------------------------------------------------------------------[39m
[31mValueError[39m                                Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[9][39m[32m, line 12[39m
[32m      4[39m chronological_corpus_names = hascadence_metadata.get_corpus_names()
[32m      5[39m bar_data = pd.concat(
[32m      6[39m     [
[32m      7[39m         mean_composition_years.rename([33m"[39m[33myear[39m[33m"[39m),
[32m   (...)[39m[32m     10[39m     axis=[32m1[39m,
[32m     11[39m ).reset_index()
[32m---> [39m[32m12[39m fig = [43mpx[49m[43m.[49m[43mbar[49m[43m([49m
[32m     13[39m [43m    [49m[43mbar_data[49m[43m,[49m
[32m     14[39m [43m    [49m[43mx[49m[43m=[49m[33;43m"[39;49m[33;43myear[39;49m[33;43m"[39;49m[43m,[49m
[32m     15[39m [43m    [49m[43my[49m[43m=[49m[33;43m"[39;49m[33;43mpieces[39;49m[33;43m"[39;49m[43m,[49m
[32m     16[39m [43m    [49m[43mcolor[49m[43m=[49m[33;43m"[39;49m[33;43mcorpus[39;49m[33;43m"[39;49m[43m,[49m
[32m     17[39m [43m    [49m[43mtitle[49m[43m=[49m[33;43m"[39;49m[33;43mPieces contained in the dataset[39;49m[33;43m"[39;49m[43m,[49m
[32m     18[39m [43m)[49m
[32m     19[39m fig.update_traces(width=[32m5[39m)

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/plotly/express/_chart_types.py:381[39m, in [36mbar[39m[34m(data_frame, x, y, color, pattern_shape, facet_row, facet_col, facet_col_wrap, facet_row_spacing, facet_col_spacing, hover_name, hover_data, custom_data, text, base, error_x, error_x_minus, error_y, error_y_minus, animation_frame, animation_group, category_orders, labels, color_discrete_sequence, color_discrete_map, color_continuous_scale, pattern_shape_sequence, pattern_shape_map, range_color, color_continuous_midpoint, opacity, orientation, barmode, log_x, log_y, range_x, range_y, text_auto, title, subtitle, template, width, height)[39m
[32m    332[39m [38;5;28;01mdef[39;00m [34mbar[39m(
[32m    333[39m     data_frame=[38;5;28;01mNone[39;00m,
[32m    334[39m     x=[38;5;28;01mNone[39;00m,
[32m   (...)[39m[32m    375[39m     height=[38;5;28;01mNone[39;00m,
[32m    376[39m ) -> go.Figure:
[32m    377[39m [38;5;250m    [39m[33;03m"""[39;00m
[32m    378[39m [33;03m    In a bar plot, each row of `data_frame` is represented as a rectangular[39;00m
[32m    379[39m [33;03m    mark.[39;00m
[32m    380[39m [33;03m    """[39;00m
[32m--> [39m[32m381[39m     [38;5;28;01mreturn[39;00m [43mmake_figure[49m[43m([49m
[32m    382[39m [43m        [49m[43margs[49m[43m=[49m[38;5;28;43mlocals[39;49m[43m([49m[43m)[49m[43m,[49m
[32m    383[39m [43m        [49m[43mconstructor[49m[43m=[49m[43mgo[49m[43m.[49m[43mBar[49m[43m,[49m
[32m    384[39m [43m        [49m[43mtrace_patch[49m[43m=[49m[38;5;28;43mdict[39;49m[43m([49m[43mtextposition[49m[43m=[49m[33;43m"[39;49m[33;43mauto[39;49m[33;43m"[39;49m[43m)[49m[43m,[49m
[32m    385[39m [43m        [49m[43mlayout_patch[49m[43m=[49m[38;5;28;43mdict[39;49m[43m([49m[43mbarmode[49m[43m=[49m[43mbarmode[49m[43m)[49m[43m,[49m
[32m    386[39m [43m    [49m[43m)[49m

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/plotly/express/_core.py:2479[39m, in [36mmake_figure[39m[34m(args, constructor, trace_patch, layout_patch)[39m
[32m   2476[39m layout_patch = layout_patch [38;5;129;01mor[39;00m {}
[32m   2477[39m apply_default_cascade(args)
[32m-> [39m[32m2479[39m args = [43mbuild_dataframe[49m[43m([49m[43margs[49m[43m,[49m[43m [49m[43mconstructor[49m[43m)[49m
[32m   2480[39m [38;5;28;01mif[39;00m constructor [38;5;129;01min[39;00m [go.Treemap, go.Sunburst, go.Icicle] [38;5;129;01mand[39;00m args[[33m"[39m[33mpath[39m[33m"[39m] [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m   2481[39m     args = process_dataframe_hierarchy(args)

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/plotly/express/_core.py:1727[39m, in [36mbuild_dataframe[39m[34m(args, constructor)[39m
[32m   1724[39m     args[[33m"[39m[33mcolor[39m[33m"[39m] = [38;5;28;01mNone[39;00m
[32m   1725[39m [38;5;66;03m# now that things have been prepped, we do the systematic rewriting of `args`[39;00m
[32m-> [39m[32m1727[39m df_output, wide_id_vars = [43mprocess_args_into_dataframe[49m[43m([49m
[32m   1728[39m [43m    [49m[43margs[49m[43m,[49m
[32m   1729[39m [43m    [49m[43mwide_mode[49m[43m,[49m
[32m   1730[39m [43m    [49m[43mvar_name[49m[43m,[49m
[32m   1731[39m [43m    [49m[43mvalue_name[49m[43m,[49m
[32m   1732[39m [43m    [49m[43mis_pd_like[49m[43m,[49m
[32m   1733[39m [43m    [49m[43mnative_namespace[49m[43m,[49m
[32m   1734[39m [43m[49m[43m)[49m
[32m   1735[39m df_output: nw.DataFrame
[32m   1736[39m [38;5;66;03m# now that `df_output` exists and `args` contains only references, we complete[39;00m
[32m   1737[39m [38;5;66;03m# the special-case and wide-mode handling by further rewriting args and/or mutating[39;00m
[32m   1738[39m [38;5;66;03m# df_output[39;00m

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/plotly/express/_core.py:1328[39m, in [36mprocess_args_into_dataframe[39m[34m(args, wide_mode, var_name, value_name, is_pd_like, native_namespace)[39m
[32m   1326[39m         [38;5;28;01mif[39;00m argument == [33m"[39m[33mindex[39m[33m"[39m:
[32m   1327[39m             err_msg += [33m"[39m[38;5;130;01m\n[39;00m[33m To use the index, pass it in directly as `df.index`.[39m[33m"[39m
[32m-> [39m[32m1328[39m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(err_msg)
[32m   1329[39m [38;5;28;01melif[39;00m length [38;5;129;01mand[39;00m (actual_len := [38;5;28mlen[39m(df_input)) != length:
[32m   1330[39m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[32m   1331[39m         [33m"[39m[33mAll arguments should have the same length. [39m[33m"[39m
[32m   1332[39m         [33m"[39m[33mThe length of column argument `df[[39m[38;5;132;01m%s[39;00m[33m]` is [39m[38;5;132;01m%d[39;00m[33m, whereas the [39m[33m"[39m
[32m   (...)[39m[32m   1339[39m         )
[32m   1340[39m     )

[31mValueError[39m: Value of 'color' is not the name of a column in 'data_frame'. Expected one of ['index', 'year', 'pieces'] but received: corpus

